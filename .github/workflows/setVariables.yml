name: Set variables

on:
  push:

jobs:
  set:
    name: set
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "action_state=1" >> $GITHUB_ENV
          echo "action_state_0=0" >> $GITHUB_ENV

      - name: Set output variables
        id: output-variables
        run: |
          echo "state=1" >> $GITHUB_OUTPUT
          echo "state0=0" >> $GITHUB_OUTPUT

      - name: Use the value directly
        run: |
          echo "${{ env.action_state }}"
          echo "${{ env.action_state_0 }}"
          echo "${{ steps.output-variables.outputs.state }}"
          echo "${{ steps.output-variables.outputs.state0 }}"

  save_local_state:
    name: save_local_state
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Save local state
        run: |
          echo 1 > ./state

      - uses: actions/upload-artifact@v3
        with:
          name: state
          path: ./

  use:
    name: use
    runs-on: ubuntu-latest
    needs: [ set, save_local_state ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use the value in past job(Failure)
        run: |
          echo "${{ env.action_state }}"
          echo "${{ env.action_state_0 }}"
          echo "${{ steps.output-variables.outputs.state }}"
          echo "${{ steps.output-variables.outputs.state0 }}"

  use_local_state:
    name: use_local_state
    runs-on: ubuntu-latest
    needs: [ save_local_state ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            const allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            const matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "state"
            })[0];
            const download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            const fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/state.zip`, Buffer.from(download.data));

      - name: 'Unzip artifact'
        run: unzip state.zip

      - name: 'Comment on PR'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const state = Number(fs.readFileSync('./state'));
            console.log(state);
